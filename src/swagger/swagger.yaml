swagger: "2.0"
info:
  version: "1.0.0"
  title: node-swagger-template
# during dev, should point to your local machine.
# Note this field is optional.
host: localhost:10010
# basePath prefixes all resource paths
basePath: /api/v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
  
paths:
  # /api/v1/product
  /product/{id}:
    x-swagger-router-controller: ProductController
    get:
      description: Gets a product by id.
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: The ID of the Product to get.
          required: true
          type: string
          format: ObjectId
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Product"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a Product by id.
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: The ID of the Product to get.
          required: true
          type: string
          format: ObjectId
      responses:
        "204":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /product:
    x-swagger-router-controller: ProductController
    get:
      description: Gets all Products created so far.
      operationId: getProducts
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new product.
      operationId: postProduct
      parameters:
        - name: body
          in: body
          description: The new Product object.
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Product"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  # /api/v1/inventory
  /inventory/{id}:
    x-swagger-router-controller: InventoryController
    get:
      description: Gets a inventory by id.
      operationId: getInventory
      parameters:
        - name: id
          in: path
          description: The ID of the inventory to get.
          required: true
          type: string
          format: ObjectId
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Inventory"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a Inventory by id.
      operationId: deleteInventory
      parameters:
        - name: id
          in: path
          description: The ID of the Inventory to get.
          required: true
          type: string
          format: ObjectId
      responses:
        "204":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /inventory:
    x-swagger-router-controller: InventoryController
    get:
      description: Gets all Inventories created so far.
      operationId: getInventories
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Inventory"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new Inventory.
      operationId: postInventory
      parameters:
        - name: body
          in: body
          description: The new Inventory object.
          required: true
          schema:
            $ref: "#/definitions/Inventory"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Inventory"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  Product:
    type: object
    required:
      - title
      - price
      - category
      - description
    properties:
      id:
        type: string
        format: ObjectId
      title:
        type: string      
      price:
        type: string
      category:
        type: string
      description:
        type: string
  Inventory:
    type: object
    required:
      - product_id
      - quantity
      - inventory_associates
      - address
      - location
      - quantity_lessthan
      - quantity_morethan
    properties:
      id:
        type: string
        format: ObjectId
      product_id:
        type: string      
      quantity:
        type: string
      inventory_associates:
        type: string
      address:
        type: string
      location:
        type: string
      quantity_lessthan:
        type: string
      quantity_morethan:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
